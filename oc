pipeline {
  agent any

  environment {
    VAULT_ADDR = "${upgradeEnvVars.vault_endpoint}"
  }

  stages {
    stage('Login to Vault & Retrieve Secrets') {
      steps {
        script {
          def CLIENT_TOKEN = sh(
            script: """vault write -field=token auth/approle/login role_id=${upgradeEnvVars.role_id} secret_id=${params.secret_id}""",
            returnStdout: true
          ).trim()

          // Set token for use in subsequent shell commands
          env.VAULT_TOKEN = CLIENT_TOKEN

          // Get multiple secrets from Vault
          def ARTIFACTORY_TOKEN = sh(
            script: """vault kv get -field=artifactory_token secret/cdpae-foundations-store/ocp/artifactory""",
            returnStdout: true
          ).trim()

          def DOCKER_PASSWORD = sh(
            script: """vault kv get -field=docker_password secret/cdpae-foundations-store/ocp/docker""",
            returnStdout: true
          ).trim()

          def SLACK_TOKEN = sh(
            script: """vault kv get -field=slack_token secret/cdpae-foundations-store/ocp/slack""",
            returnStdout: true
          ).trim()

          // Set them as global env variables
          env.ARTIFACTORY_TOKEN = ARTIFACTORY_TOKEN
          env.DOCKER_PASSWORD = DOCKER_PASSWORD
          env.SLACK_TOKEN = SLACK_TOKEN
        }
      }
    }

    stage('Use Secrets') {
      steps {
        echo "Artifactory Token: ${env.ARTIFACTORY_TOKEN}"
        echo "Docker Password: ${env.DOCKER_PASSWORD}"
        echo "Slack Token: ${env.SLACK_TOKEN}"
        // Here you'd use them in login or API calls, etc.
      }
    }
  }
}
